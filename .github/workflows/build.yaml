name: Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      pull-requests: read
      checks: write
    env:
      DOCKER_HUB_USERNAME: josephcz
      PROJECT_NAME: moefile
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.1'
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Install Dependencies
        run:  bun install
      - uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
      - name: Build
        run:  bun run build
      - name: Archive HTML
        run:
          tar -czf bin/archives/${PROJECT_NAME}-frontend-${COMMIT_SHA}.tar.gz -C dist .
        env:
          COMMIT_SHA: ${{ github.sha }}
      - name: Upload Artifact (Backend)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-build-archives-${{ github.ref_name }}
          path: bin/archives/
        env:
          REF_NAME: ${{ github.ref_name }}
      - name: Upload Release Asset
        if:   startsWith(github.ref, 'refs/tags/')
        run: |
          gh release create ${GIT_TAG} bin/archives/*
        env:
          GIT_TAG: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/riscv64,linux/386
          push: true
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ startsWith(github.ref, 'refs/tags/') && 'latest' || 'dev' }}
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || github.sha }}
            ghcr.io/${{ github.repository }}:${{ startsWith(github.ref, 'refs/tags/') && 'latest' || 'dev' }}
            ghcr.io/${{ github.repository }}:${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || github.sha }}
